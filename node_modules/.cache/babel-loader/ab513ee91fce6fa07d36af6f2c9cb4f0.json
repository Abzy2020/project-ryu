{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zcool\\\\Desktop\\\\project-ryu\\\\src\\\\comps\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Weather = () => {\n  _s();\n\n  const bottomRef = React.useRef();\n\n  function handleScroll() {\n    bottomRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }\n\n  const [latitude, setLatitude] = React.useState('');\n  const [longitude, setLongitude] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const [color, setColor] = React.useState('');\n\n  const getLocation = async () => {\n    try {\n      const getData = await axios.get(`http://localhost:3001/coordinates/${latitude}/add/${longitude}`);\n      console.log(getData.data);\n      setDescription(prevDescription => prevDescription = getData.data);\n    } catch (err) {\n      console.log(err);\n    }\n\n    handleScroll();\n  };\n\n  const getLongAndLat = async () => {\n    try {\n      const getData = await axios.get(`http://localhost:3001/location/`);\n      setLongitude(prevLongitude => prevLongitude = getData.data.longitude);\n      setLatitude(prevLatitude => prevLatitude = getData.data.latitude);\n    } catch (err) {\n      console.log(err);\n    }\n  }; //color based on weather\n\n\n  switch (description) {\n    case \"clear sky\":\n      setColor(prevColor => prevColor = {\n        color: \"rgb(38, 179, 184)\"\n      });\n      break;\n\n    default:\n      setColor(prevColor => prevColor = {\n        color: \"black\"\n      });\n      break;\n  }\n\n  if (description == 'clear sky') {\n    setColor(prevColor => prevColor = {\n      color: \"rgb(38, 179, 184)\"\n    });\n  }\n\n  React.useEffect(() => {\n    getLongAndLat();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your longitude and latitude coordinates are :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"coords\",\n      children: [latitude, \", \", longitude]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"weather-btn\",\n        onClick: getLocation,\n        children: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"desc\",\n      ref: bottomRef,\n      style: color,\n      children: description.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Weather, \"gN9P46lMl6fMYnzFcGNUz6QIJc4=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","axios","Weather","bottomRef","useRef","handleScroll","current","scrollIntoView","behavior","latitude","setLatitude","useState","longitude","setLongitude","description","setDescription","color","setColor","getLocation","getData","get","console","log","data","prevDescription","err","getLongAndLat","prevLongitude","prevLatitude","prevColor","useEffect","toUpperCase"],"sources":["C:/Users/zcool/Desktop/project-ryu/src/comps/Weather.js"],"sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\n\r\n\r\nconst Weather = () => {\r\n    \r\n    const bottomRef = React.useRef();\r\n\r\n    function handleScroll() {\r\n        bottomRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n\r\n    const [latitude, setLatitude] = React.useState('');\r\n    const [longitude, setLongitude] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n    const [color, setColor] = React.useState('');\r\n    \r\n    const getLocation = async () => {\r\n        try {\r\n            const getData = await axios.get(`http://localhost:3001/coordinates/${latitude}/add/${longitude}`);\r\n            console.log(getData.data);\r\n            setDescription(prevDescription => prevDescription = getData.data);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        handleScroll();\r\n    }\r\n\r\n    const getLongAndLat = async () => {\r\n        try {\r\n            const getData = await axios.get(`http://localhost:3001/location/`);\r\n            setLongitude(prevLongitude => prevLongitude = getData.data.longitude);\r\n            setLatitude(prevLatitude => prevLatitude = getData.data.latitude);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    //color based on weather\r\n    switch (description) {\r\n        case \"clear sky\":\r\n            setColor(prevColor => prevColor = { color: \"rgb(38, 179, 184)\" });\r\n            break;\r\n        default:\r\n            setColor(prevColor => prevColor = { color: \"black\" });\r\n            break;\r\n    }\r\n\r\n    if (description == 'clear sky'){\r\n        setColor(prevColor => prevColor = { color: \"rgb(38, 179, 184)\" });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getLongAndLat();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"weather\" >\r\n            <span>Your longitude and latitude coordinates are :</span>\r\n            <span id=\"coords\">{latitude}, {longitude}</span>\r\n            <div className=\"btn\">\r\n                <button id=\"weather-btn\" onClick={getLocation}>start</button>\r\n            </div>\r\n            <span id=\"desc\" ref={bottomRef} style={color}>{description.toUpperCase()}</span>\r\n        </div>    \r\n    )\r\n}\r\nexport default Weather;"],"mappings":"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"},"metadata":{},"sourceType":"module"}